// Generated by CoffeeScript 1.12.4
var addons, assertShape, isObject, registry, resolveError, resolveType, validator, valido;

isObject = require("isObject");

resolveError = require("../utils/resolveError");

resolveType = require("../utils/resolveType");

registry = require("../registry");

valido = require("../valido");

addons = valido._addons;

assertShape = function(values) {
  var error, key, ref, type;
  if (!isObject(values)) {
    return registry.get("object").error;
  }
  ref = this.types;
  for (key in ref) {
    type = ref[key];
    if (error = type.assert(values[key], key)) {
      return error;
    }
  }
};

validator = {
  assert: assertShape
};

validator.init = function(shape) {
  var key, value;
  this.types = {};
  for (key in shape) {
    value = shape[key];
    this.types[key] = resolveType(value);
  }
};

valido.add(validator, isObject);

addons.Shape = function(shape) {
  var inst;
  inst = Object.create(validator);
  inst.init(shape);
  return inst;
};
