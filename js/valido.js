// Generated by CoffeeScript 1.12.4
var addons, defaultAssert, defaultValidate, isObject, isValidator, testAssert, testValidate, valido, validoTag;

isObject = require("isObject");

validoTag = "valido_" + Math.random().toString(16).slice(2, 6);

addons = [];

addons.isValido = function(value) {
  return value[validoTag] === true;
};

valido = function(config) {
  var name;
  if (arguments.length > 1) {
    name = config;
    config = arguments[1];
  }
  if (Array.isArray(config)) {
    return addons.Either(config);
  }
  if (typeof config === "function") {
    config = {
      assert: config
    };
  } else if (isObject(config)) {
    if (!isValidator(config)) {
      return addons.Shape(config);
    }
  } else {
    throw TypeError("Expected an object, function, or array");
  }
  if (typeof config.test !== "function") {
    if (typeof config.validate === "function") {
      config.test = testValidate;
    } else if (typeof config.assert === "function") {
      config.validate = defaultValidate;
      config.test = testAssert;
    } else {
      throw Error("Validators must have a `test`, `validate`, or `assert` function");
    }
  } else {
    if (typeof config.validate !== "function") {
      config.validate = defaultValidate;
    }
    if (typeof config.assert !== "function") {
      config.assert = defaultAssert;
    }
  }
  Object.defineProperty(config, validoTag, {
    value: true
  });
  if (name) {
    config.name = name;
  }
  return config;
};

valido.add = function(addon, resolve) {
  addons.push(valido(addon));
  addon.resolve = resolve;
  return addon;
};

Object.defineProperty(valido, "_addons", {
  value: addons
});

module.exports = valido;

testValidate = function(value) {
  return this.validate(value) === true;
};

testAssert = function(value) {
  return this.assert(value) === void 0;
};

defaultValidate = function(value) {
  return this.test(value);
};

defaultAssert = function(value) {
  if (!this.test(value)) {
    return this.error;
  }
};

isValidator = function(config) {
  if (typeof config.test !== "function") {
    if (typeof config.validate !== "function") {
      if (typeof config.assert !== "function") {
        return false;
      }
    }
  }
  if (typeof config.assert !== "function") {
    if (typeof config.error !== "function") {
      throw Error("Validators must have an `assert` or `error` function");
    }
  }
  return true;
};
